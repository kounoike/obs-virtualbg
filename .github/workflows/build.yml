name: build
on: push
jobs:
  build_win:
    name: build on Windows
    runs-on: windows-2022
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache OBS-Studio deps
        uses: actions/cache@v3
        env:
          cache-name: obs
        with:
          path: deps/obs-studio
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('scripts/build_obs.bat') }}
      - name: build
        run: .\scripts\build_win.bat
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-archive
          path: build*/obs-virtualbg-*.zip
  build_mac:
    name: build on Mac
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache ONNX Runtime
        uses: actions/cache@v3
        env:
          cache-name: onnxruntime
        with:
          path: deps/onnxruntime
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('scripts/build_onnxruntime_mac.sh') }}
      - name: build ONNX Runtime
        run: ./scripts/build_onnxruntime_mac.sh
      - name: install deps
        run: ./scripts/install_deps_mac.sh
      - name: build
        run: ./scripts/build_mac.sh
      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: mac-archive
      #     path: build/obs-virtualbg-*.zip
  build_linux:
    name: build on Linux
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: install pkgs
        run: mkdir deps && sudo ./scripts/install_pkgs_linux.sh
      - name: install deps
        run: ./scripts/install_deps_linux.sh
      - name: build
        run: ./scripts/build_linux.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-20.04-archive
          path: build/obs-virtualbg-*.deb
