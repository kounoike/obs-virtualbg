on:
  release:
    types:
      - published

name: Upload Release Asset

jobs:
  release_win:
    name: Upload Release Asset on Windows
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Cache OBS Studio deps
      uses: actions/cache@v3
      env:
        cache-name: obs
      with:
          path: deps/obs-studio
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('scripts/build_obs.bat') }}
    - name: build
      run: .\scripts\build_win.bat
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-archive
        path: build/obs-virtualbg-*.zip
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/obs-virtualbg-*.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
  # release_mac:
  #   name: Upload Release Asset on Mac
  #   runs-on: macos-latest
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - name: Cache ONNX Runtime
  #     uses: actions/cache@v3
  #     env:
  #       cache-name: onnxruntime
  #     with:
  #         path: deps/onnxruntime
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('scripts/build_onnxruntime_mac.sh') }}
  #   - name: build ONNX Runtime
  #     run: ./scripts/build_onnxruntime_mac.sh
  #   - name: install deps
  #     run: ./scripts/install_deps_mac.sh
  #   - name: build
  #     run: ./scripts/build_mac.sh
  #   - name: Upload artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: mac-archive
  #       path: build/obs-virtualbg-*.zip
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: build/obs-virtualbg-*.zip
  #       tag: ${{ github.ref }}
  #       overwrite: true
  #       file_glob: true
  release_ubuntu:
    name: Upload Release Asset on Ubuntu
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: install pkgs
        run: mkdir deps && sudo ./scripts/install_pkgs_linux.sh
      - name: install deps
        run: ./scripts/install_deps_linux.sh
      - name: build
        run: ./scripts/build_linux.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-20.04-archive
          path: build/obs-virtualbg-*.deb
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/obs-virtualbg-*.deb
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
